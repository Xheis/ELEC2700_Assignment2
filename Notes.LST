C51 COMPILER V9.53.0.0   NOTES                                                             04/22/2015 14:02:35 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE NOTES
OBJECT MODULE PLACED IN Notes.OBJ
COMPILER INVOKED BY: C:\programming\Keil_v5\C51\BIN\C51.EXE Notes.h OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG TABS(2)

line level    source

   1          #ifndef Notes
   2          #define Notes
   3          /*
   4          -----------------------------------------------------------------------------
   5          -----------------------------------------------------------------------------
   6          -----------------------------------------------------------------------------
   7          ---------     This is our Notes.header            ---------
   8          ---------                             ---------
   9          ---------     We will store functions related         ---------
  10          ---------     to generating and playing notes here.     ---------
  11          ---------                             ---------
  12          ---------     The two accessible (external) methods       ---------
  13          ---------     should be the InitDAC(), for setting up     ---------
  14          ---------     DAC at the start, and PlayNote() which      ---------
  15          ---------     will take a string and a octave into      ---------
  16          ---------     the function. i.e.                ---------
  17          ---------                             ---------
  18          ---------     PlayNote("A", 4);               ---------
  19          ---------     This will play a 440Hz sine wave        ---------
  20          ---------                             ---------
  21          ---------                             ---------
  22          -----------------------------------------------------------------------------
  23          -----------------------------------------------------------------------------
  24          -----------------------------------------------------------------------------
  25          
  26          */
  27          
  28          
  29          #include <string.h>
  30          
  31          void InitDAC();
  32          void PlayNote();
  33          int  Getfrequency();
  34          void SetDAC();
  35          
  36          
  37          
  38          
  39          
  40          void InitDAC()
  41          {
  42   1        //We want this function to set up our DAC for general use. We will use the SetDAC() method for specifical
             -ly readying the DAC for playing notes
  43   1      }
  44          void SetDAC()
  45          {
  46   1        //We want to grab the frequency needed using Getfrequency(), get the phase from our lookup table, and sit
             - ready to play the note
  47   1      }
  48          void PlayNote()
  49          {
  50   1        //This method should actually play the given note. It will act as the method to pass in "G#", which will 
             -be parsed to Getfrequency("G#"), which
  51   1        //will grab "G#"'s corresponding phase value from a lookup table and set the DAC with it using SetDAC("G#
             -");, or maybe we'll pass it the frequency. 
C51 COMPILER V9.53.0.0   NOTES                                                             04/22/2015 14:02:35 PAGE 2   

  52   1        // Dunno!
  53   1      }
  54          
  55          int  Getfrequency()
  56          {
  57   1        //Pretty straight forward. Just grab a value from a lookup table corresponding to the frequency of the wa
             -ve wanted. i.e. 
  58   1        // Grab 415.3 Hz when you request "G#".
  59   1        
  60   1      //    C   C#    D   Eb    E   F   F#    G   G#    A   Bb    B
  61   1      // 0  16.35 17.32 18.35 19.45 20.60 21.83 23.12 24.50 25.96 27.50 29.14 30.87
  62   1      // 1  32.70 34.65 36.71 38.89 41.20 43.65 46.25 49.00 51.91 55.00 58.27 61.74
  63   1      // 2  65.41 69.30 73.42 77.78 82.41 87.31 92.50 98.00 103.8 110.0 116.5 123.5
  64   1      // 3  130.8 138.6 146.8 155.6 164.8 174.6 185.0 196.0 207.7 220.0 233.1 246.9
  65   1      // 4  261.6 277.2 293.7 311.1 329.6 349.2 370.0 392.0 415.3 440.0 466.2 493.9
  66   1      // 5  523.3 554.4 587.3 622.3 659.3 698.5 740.0 784.0 830.6 880.0 932.3 987.8
  67   1      // 6  1047  1109  1175  1245  1319  1397  1480  1568  1661  1760  1865  1976
  68   1      // 7  2093  2217  2349  2489  2637  2794  2960  3136  3322  3520  3729  3951
  69   1      // 8  4186  4435  4699  4978  5274  5588  5920  6272  6645  7040  7459  7902
  70   1        
  71   1        return -1;
  72   1      }
  73          
  74          
  75          
  76          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =      8    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
