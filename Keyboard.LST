C51 COMPILER V9.53.0.0   KEYBOARD                                                          04/22/2015 14:01:59 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN Keyboard.OBJ
COMPILER INVOKED BY: C:\programming\Keil_v5\C51\BIN\C51.EXE Keyboard.h OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG TABS(2)

line level    source

   1          #ifndef Keyboard
   2          #define Keyboard
   3          
   4          /*
   5          -----------------------------------------------------------------------------
   6          -----------------------------------------------------------------------------
   7          -----------------------------------------------------------------------------
   8          ---------     This is our Keyboard.header           ---------
   9          ---------                             ---------
  10          ---------     We will store functions related         ---------
  11          ---------     to taking user input and playing/holding    ---------
  12          ---------     notes. This will rely on calling upon     ---------
  13          ---------     the Notes.header for functions/methods      ---------
  14          ---------     related to generating and playing specific    ---------
  15          ---------     frequency notes.                ---------
  16          ---------                             ---------
  17          ---------                             ---------
  18          ---------                             ---------
  19          -----------------------------------------------------------------------------
  20          -----------------------------------------------------------------------------
  21          -----------------------------------------------------------------------------
  22          */
  23          
  24          
  25          
  26          void CheckInput();
  27          void UpdateDispaly();
  28          
  29          
  30          void CheckInput()
  31          {
  32   1        //We want to loop this in our main loop, and check our inputs. Ideally, we're going to be reading the P1 
             -input byte for 
  33   1        //changes in value, at which point we can grab the corresponding value. 
  34   1        //The requirements ask us to play the "white keys":
  35   1        //    C     D     E   F   G   A   B
  36   1        //    P1.2  P1.3  P1.4  P1.5  P1.6  P1.7  P1.8
  37   1        
  38   1        //When the first button is pressed (P1.1), the sharp keys will be engagued.
  39   1        //    C#    D(Eb) E   F#    G#    A#(Bb)  B
  40   1        //    P1.2  P1.3  P1.4  P1.5  P1.6  P1.7  P1.8
  41   1        // with E & B not having Sharps
  42   1        
  43   1        //As we have 8 buttons, I'd also suggest we make a easy mode to take a selected note, and we can map Octa
             -ves 1-8 on P1.
  44   1        //Should be an easy extension *at the end*.
  45   1        
  46   1        //We're done here, proceed to update the display and return to the MainLoop.
  47   1        UpdateDispaly();
  48   1      }
  49          
  50          
  51          void UpdateDispaly()
  52          {
  53   1        //I feel this is a good opportunity to use the LEDs and LCD to display whatever information we feel neces
C51 COMPILER V9.53.0.0   KEYBOARD                                                          04/22/2015 14:01:59 PAGE 2   

             -sary. As such, I've left this method open
  54   1        //to whatever you feel we need to use. It can be called inside Check Input
  55   1      }
  56          
  57          
  58          
  59          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =      4    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
