C51 COMPILER V9.53.0.0   ASSIGN2                                                           04/22/2015 14:21:26 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ASSIGN2
OBJECT MODULE PLACED IN Assign2.OBJ
COMPILER INVOKED BY: C:\programming\Keil_v5\C51\BIN\C51.EXE Assign2.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG TABS(2)

line level    source

   1          /*________________________________________________________________________________________________________
             -_____________
   2          
   3                  Assignment:       Elec2700
   4                  Module:         Assignment 2
   5                  Author:         Chris Caelli & Tim Farnworth
   6                  Date:           20/4/15
   7          
   8                  Description:
   9                  This program will emulate a MIDI keyboard and produce excellent music (probably)
  10          
  11          
  12                  Notes:          
  13              Basic Structure is being implemented. The code is limited to strict C.
  14                  Revisions:    v0.1 Alpha
  15          
  16          __________________________________________________________________________________________________________
             -___________*/
  17          #include <SiLABS/C8051F120.h>     //"C:\Programming\Keil_v5\C51\INC\SiLABS\c8051F120.h"
  18          //#include <C8051F120_defs.h>     // SFR declarations
  19          #include "Assign2.h"
  20          #include "Notes.h"
  21          #include "Keyboard.h"
  22          
  23          /*--------------------------------------------------------------------------------------------------------
             -------------
  24                  Function:         Main
  25          
  26                  Description:      Main routine
  27          
  28                  Revisions:
  29          
  30          ----------------------------------------------------------------------------------------------------------
             -----------*/
  31          void main(void)
  32          {
  33   1        General_Init();
  34   1        Timer_Init();
  35   1        Voltage_Reference_Init();
  36   1        DAC_Init();
  37   1        Interrupts_Init();
  38   1      
  39   1        while(1)
  40   1        { 
  41   2          // Do stuff here ??
  42   2      
  43   2          // Try this code out to test the pushbuttons and LEDs as defined in Assign2.h
  44   2          LD1 = ~PB1; // Note the ~ means "complement"
  45   2          LD2 = ~PB2;
  46   2          LD3 = ~PB3;
  47   2          LD4 = ~PB4;
  48   2          LD5 = ~PB5;
  49   2          LD6 = ~PB6;
  50   2          LD7 = ~PB7;
  51   2      
C51 COMPILER V9.53.0.0   ASSIGN2                                                           04/22/2015 14:21:26 PAGE 2   

  52   2          if ((~MPB) || (~PB8))  // What does this do.....Note that MPB is the P3.7 push button on the 8051 board
  53   2            LD8 = 1;
  54   2          else 
  55   2            LD8 = 0;
  56   2        }
  57   1      }
  58          
  59          /*--------------------------------------------------------------------------------------------------------
             -------------
  60                  Function:         General_Init
  61          
  62                  Description:      Initialise ports, watchdog....
  63          
  64                  Revisions:
  65          
  66          ----------------------------------------------------------------------------------------------------------
             -----------*/
  67          void General_Init()
  68          {
  69   1        WDTCN = 0xde;
  70   1        WDTCN = 0xad;
  71   1        SFRPAGE = CONFIG_PAGE;
  72   1        P2MDOUT = 0xff;   // Need to make pushpull outputs to drive LEDs properly
  73   1      
  74   1        XBR2 = 0x40;
  75   1      }
  76          
  77          /*--------------------------------------------------------------------------------------------------------
             -------------
  78                  Function:         Timer_Init
  79          
  80                  Description:      Initialise timer ports and registers
  81          
  82                  Revisions:
  83          
  84          ----------------------------------------------------------------------------------------------------------
             -----------*/
  85          void Timer_Init()
  86          {
  87   1        SFRPAGE   = TMR2_PAGE;
  88   1      
  89   1        // Configuration goes here.............
  90   1      
  91   1      }
  92          
  93          /*--------------------------------------------------------------------------------------------------------
             -------------
  94                  Function:         Voltage_Reference_Init
  95          
  96                  Description:      Initialise voltage references (Needed for DAC)
  97          
  98                  Revisions:
  99          
 100          ----------------------------------------------------------------------------------------------------------
             -----------*/
 101          void Voltage_Reference_Init()
 102          {
 103   1        SFRPAGE   = ADC0_PAGE;
 104   1        REF0CN    = 0x03; // Turn on internal bandgap reference and output buffer to get 2.4V reference (pg 107)
 105   1      }
 106          
 107          /*--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.53.0.0   ASSIGN2                                                           04/22/2015 14:21:26 PAGE 3   

             -------------
 108                  Function:         DAC_Init
 109          
 110                  Description:      Initialise DAC0. 
 111          
 112                  Revisions:
 113          
 114          ----------------------------------------------------------------------------------------------------------
             -----------*/
 115          void DAC_Init()
 116          {
 117   1        SFRPAGE   = DAC0_PAGE;
 118   1      
 119   1          // Configuration goes here...........
 120   1      }
 121          
 122          /*--------------------------------------------------------------------------------------------------------
             -------------
 123                  Function:         Interrupts_Init
 124          
 125                  Description:      Initialise interrupts
 126          
 127                  Revisions:
 128          
 129          ----------------------------------------------------------------------------------------------------------
             -----------*/
 130          void Interrupts_Init()
 131          {
 132   1        IE        = 0xA0;  // Global enable interrupt + timer 2 interrupt
 133   1      }
 134          
 135          /*--------------------------------------------------------------------------------------------------------
             -------------
 136                  Function:         Timer2_ISR
 137          
 138                  Description:      
 139          
 140                  Revisions:
 141          
 142          ----------------------------------------------------------------------------------------------------------
             -----------*/
 143          void Timer2_ISR (void) interrupt 5
 144          {
 145   1        unsigned char SFRPAGE_SAVE = SFRPAGE;        // Save Current SFR page
 146   1      
 147   1        SFRPAGE   = DAC0_PAGE;
 148   1      
 149   1        // Work to do here.......
 150   1        
 151   1        TF2 = 0;        // Reset Interrupt
 152   1        SFRPAGE = SFRPAGE_SAVE;                     // Restore SFR page
 153   1      }
 154          
 155          
 156          
 157          
 158          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    139    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.53.0.0   ASSIGN2                                                           04/22/2015 14:21:26 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
